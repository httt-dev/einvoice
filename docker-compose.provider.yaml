name: einvoice-provider

networks:
    einvoice-nw:
        driver: bridge
        name: einvoice-nw

services:
    # grafana:
    #   image: grafana/grafana
    #   container_name: grafana
    #   ports:
    #     - 3000:3000
    #   volumes:
    #     - ./docker/docker_data/grafana-data:/var/lib/grafana

    #   networks:
    #     - einvoice-nw

    # loki:
    #   image: grafana/loki
    #   container_name: loki
    #   ports:
    #     - 3100:3100
    #   volumes:
    #     - ./docker/loki-config.yaml:/etc/loki/loki.yaml
    #   networks:
    #     - einvoice-nw

    # promtail:
    #   image: grafana/promtail
    #   container_name: promtail
    #   volumes:
    #     - ./docker/promtail-config.yaml:/etc/promtail/config.yml
    #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
    #     - /var/run/docker.sock:/var/run/docker.sock
    #   command: -config.file=/etc/promtail/config.yml
    #   depends_on:
    #     - loki
    #   networks:
    #     - einvoice-nw

    # kafka:
    #   container_name: kafka_server
    #   image: bitnami/kafka:latest
    #   networks:
    #     - einvoice-nw
    #   ports:
    #     - 9092:9092 # internal Docker network listener (optionally)
    #     - 29092:29092 # external listener, host local connect
    #   environment:
    #     - KAFKA_CFG_NODE_ID=0
    #     - KAFKA_CFG_PROCESS_ROLES=controller,broker
    #     - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:29092
    #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
    #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
    #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
    #     - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    #   volumes:
    #     - ./docker/docker_data/kafka_data/bitnami_data:/bitnami/kafka
    #   restart: unless-stopped

    mongodb:
        image: mongo
        container_name: mongodb
        ports:
            - '27017:27017'
        volumes:
            - ./docker/docker_data/mongodb_data:/data/db
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: Abc12345
        restart: unless-stopped
        networks:
            - einvoice-nw

    postgres:
        image: postgres
        container_name: postgres_server
        restart: unless-stopped
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: Abc12345
            POSTGRES_DB: einvoice-app
        ports:
            - '5432:5432'
        volumes:
            - ./docker/docker_data/postgres_data:/var/lib/postgresql/data
        networks:
            - einvoice-nw

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin_ui
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: Abc12345
        ports:
            - '5050:80'
        depends_on:
            - postgres
        networks:
            - einvoice-nw
        volumes:
            - ./docker/docker_data/pgadmin_data:/var/lib/pgadmin

    keycloak:
        image: quay.io/keycloak/keycloak:25.0.0
        container_name: keycloak-25.0.0
        ports:
            - '8180:8080'
        environment:
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: Abc12345

        command: start-dev
        restart: unless-stopped
        volumes:
            - ./docker/docker_data/keycloak_data:/opt/keycloak/data
        networks:
            - einvoice-nw

    redis:
        image: redis
        container_name: redis_server
        ports:
            - '6379:6379'
        networks:
            - einvoice-nw
        restart: unless-stopped
        volumes:
            - ./docker/docker_data/redis_data:/data

    redis-insight:
        image: redis/redisinsight:latest
        container_name: redis-insight-ui
        ports:
            - '5540:5540'
        networks:
            - einvoice-nw
        depends_on:
            - redis
        volumes:
            - ./docker/docker_data/redisinsight_data:/data
